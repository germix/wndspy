#include <tchar.h>
#include "utils.h"
#include <windows.h>
#include <windowsx.h>
#include <commctrl.h>
#include <richedit.h>

#ifndef CCS_VERT
#define CCS_VERT  0x00000080L
#endif
#ifndef UDS_HOTTRACK
#define UDS_HOTTRACK  0x0100
#endif
#ifndef TBS_TOOLTIPS
#define TBS_TOOLTIPS  0x0100
#endif
#ifndef HDS_HOTTRACK
#define HDS_HOTTRACK  0x0004
#endif
#ifndef HDS_DRAGDROP
#define HDS_DRAGDROP  0x0040
#endif
#ifndef HDS_FULLDRAG
#define HDS_FULLDRAG  0x0080
#endif
#ifndef LVS_OWNERDATA
#define LVS_OWNERDATA 4096
#endif
#ifndef TVS_RTLREADING
#define TVS_RTLREADING  0x0040
#endif
#ifndef TVS_NOTOOLTIPS
#define TVS_NOTOOLTIPS  0x0080
#endif
#ifndef TVS_CHECKBOXES
#define TVS_CHECKBOXES  0x0100
#endif
#ifndef TVS_TRACKSELECT
#define TVS_TRACKSELECT  0x0200
#endif
#define RBS_REGISTERDROP  0x1000
#define RBS_AUTOSIZE  0x2000
#define RBS_VERTICALGRIPPER 0x4000
#define RBS_DBLCLKTOGGLE  0x8000
#ifndef TBSTYLE_FLAT
#define TBSTYLE_FLAT  0x0800
#endif
#define TBSTYLE_LIST  0x1000
#define TBSTYLE_CUSTOMERASE  0x2000
#ifndef TCS_SCROLLOPPOSITE
#define TCS_SCROLLOPPOSITE	0x0001
#endif
#ifndef TCS_BOTTOM
#define TCS_BOTTOM	2
#endif
#ifndef TCS_VERTICAL
#define TCS_VERTICAL	128
#endif
#ifndef TCS_RIGHT
#define TCS_RIGHT	2
#endif
#ifndef TCS_MULTISELECT
#define TCS_MULTISELECT	0x0004
#endif
#ifndef TCS_HOTTRACK
#define TCS_HOTTRACK	0x0040
#endif

#ifndef LVS_EX_GRIDLINES
#define LVS_EX_GRIDLINES 1
#endif
#ifndef LVS_EX_SUBITEMIMAGES
#define LVS_EX_SUBITEMIMAGES 2
#endif
#ifndef LVS_EX_CHECKBOXES
#define LVS_EX_CHECKBOXES 4
#endif
#ifndef LVS_EX_TRACKSELECT
#define LVS_EX_TRACKSELECT 8
#endif
#ifndef LVS_EX_HEADERDRAGDROP
#define LVS_EX_HEADERDRAGDROP 16
#endif
#ifndef LVS_EX_FULLROWSELECT
#define LVS_EX_FULLROWSELECT 32
#endif
#ifndef LVS_EX_ONECLICKACTIVATE
#define LVS_EX_ONECLICKACTIVATE 64
#endif
#ifndef LVS_EX_TWOCLICKACTIVATE
#define LVS_EX_TWOCLICKACTIVATE 128
#endif

#define ENM_PARAGRAPHEXPANDED  0x00000020

#define CBEM_GETEXTENDEDSTYLE  (WM_USER+9)
#define CBEM_SETEXTENDEDSTYLE  (WM_USER+14)
#define LVM_GETEXTENDEDLISTVIEWSTYLE (LVM_FIRST+55)
#define LVM_SETEXTENDEDLISTVIEWSTYLE (LVM_FIRST+54)
#define TB_GETEXTENDEDSTYLE  (WM_USER+85)
#define TB_SETEXTENDEDSTYLE  (WM_USER+84)
#define TCM_GETEXTENDEDSTYLE  (TCM_FIRST+53)
#define TCM_SETEXTENDEDSTYLE  (TCM_FIRST+52)

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

#if 1	//!!!
#define REGISTER_STYLE(style)								{	(ULONG)style, (PWSTR)_L(#style),	},
#define REGISTER_STYLE_EXT(style, mask, depends, excludes)	{	(ULONG)style, (PWSTR)_L(#style), mask, depends, excludes,		},
#define REGISTER_STYLE_NULL()								{	(ULONG)0, (PWSTR)NULL,	},
#define REGISTER_STYLE_EXT_NULL()							{	(ULONG)0, (PWSTR)NULL, (ULONG)0, (ULONG)0, (ULONG)0,		},
#define REGISTER_CLASS(get, set, str, cls)					{	(ULONG)get, (ULONG)set, (PWSTR)str, (LPSTYLELOOKUPEXT)cls,	},
#define REGISTER_CLASS_NULL()								{	(ULONG)0, (ULONG)0, (PWSTR)NULL, (LPSTYLELOOKUPEXT)NULL,	},

#define REGISTER_HANDLE(type)			{	(int)type,	0,	_L(#type),		},
#define REGISTER_HANDLE_NULL()			{	-1,			0,	NULL,			},

///////////////////////////////////////////////////////////////////////////////////////////////////
STYLELOOKUP g_aStyles_Class[] =
{
	REGISTER_STYLE(CS_VREDRAW)
	REGISTER_STYLE(CS_HREDRAW)
	REGISTER_STYLE(CS_DBLCLKS)
	REGISTER_STYLE(CS_OWNDC)
	REGISTER_STYLE(CS_CLASSDC)
	REGISTER_STYLE(CS_PARENTDC)
	REGISTER_STYLE(CS_NOCLOSE)
	REGISTER_STYLE(CS_SAVEBITS)
	REGISTER_STYLE(CS_BYTEALIGNCLIENT)
	REGISTER_STYLE(CS_BYTEALIGNWINDOW)
	REGISTER_STYLE(CS_GLOBALCLASS)
	REGISTER_STYLE(CS_IME)
#if (_WIN32_WINNT >= 0x0501)
	REGISTER_STYLE(CS_DROPSHADOW)
#endif // _WIN32_WINNT >= 0x0501
	REGISTER_STYLE_NULL()
};
#endif

#if 0	//!!!
///////////////////////////////////////////////////////////////////////////////////////////////////
STYLELOOKUPEXT g_aStyles_Window[] =
{
//	REGISTER_STYLE_EXT(style)
//	REGISTER_STYLE_EXT(WS_POPUPWINDOW,						WS_POPUPWINDOW, -1, 0 )
//	REGISTER_STYLE_EXT(WS_OVERLAPPED,						0,	-1,	(WS_POPUP | WS_CHILD) )
	REGISTER_STYLE_EXT(WS_POPUP,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_CHILD,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_MINIMIZE,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_VISIBLE,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_DISABLED,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_CLIPSIBLINGS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_CLIPCHILDREN,						0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_MAXIMIZE,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_CAPTION,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_BORDER,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_DLGFRAME,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_VSCROLL,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_HSCROLL,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_SYSMENU,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_THICKFRAME,						0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_GROUP,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_TABSTOP,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_MINIMIZEBOX,						0,	(WS_POPUPWINDOW | WS_OVERLAPPEDWINDOW | WS_CAPTION), 0 )
	REGISTER_STYLE_EXT(WS_MAXIMIZEBOX,						0,	(WS_POPUPWINDOW | WS_OVERLAPPEDWINDOW | WS_CAPTION), 0 )

	REGISTER_STYLE_EXT_NULL()
};

STYLELOOKUPEXT g_aStylesEx_Window[] =
{
	REGISTER_STYLE_EXT(WS_EX_DLGMODALFRAME,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_NOPARENTNOTIFY,				0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_TOPMOST,						0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_ACCEPTFILES,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_TRANSPARENT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_MDICHILD,						0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_TOOLWINDOW,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_WINDOWEDGE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_CLIENTEDGE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_CONTEXTHELP,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_RIGHT,							0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_LEFT,							0,	-1,	(WS_EX_RIGHT) )
	REGISTER_STYLE_EXT(WS_EX_RTLREADING,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_LTRREADING,					0,	-1,	(WS_EX_RTLREADING) )
	REGISTER_STYLE_EXT(WS_EX_LEFTSCROLLBAR,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_RIGHTSCROLLBAR,				0,	-1,	(WS_EX_LEFTSCROLLBAR) )
	REGISTER_STYLE_EXT(WS_EX_CONTROLPARENT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_STATICEDGE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(WS_EX_APPWINDOW,						0,	-1,	0 )
//	REGISTER_STYLE_EXT(WS_EX_OVERLAPPEDWINDOW,				0,	-1,	0 )
//	REGISTER_STYLE_EXT(WS_EX_PALETTEWINDOW,					0,	-1,	0 )
/*
#if (WINVER >= 0x0500)
	REGISTER_STYLE_EXT(WS_EX_NOINHERITLAYOUT)
	REGISTER_STYLE_EXT(WS_EX_LAYOUTRTL)
#endif
#if (_WIN32_WINNT >= 0x0500)
	REGISTER_STYLE_EXT(WS_EX_LAYERED)
	REGISTER_STYLE_EXT(WS_EX_NOACTIVATE)
#endif
	REGISTER_STYLE_EXT(WS_EX_CAPTIONOKBTN)
	REGISTER_STYLE_EXT(WS_EX_NODRAG)
	REGISTER_STYLE_EXT(WS_EX_ABOVESTARTUP)
	REGISTER_STYLE_EXT(WS_EX_INK)
	REGISTER_STYLE_EXT(WS_EX_NOANIMATION)
*/
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Dialog[] =
{
	REGISTER_STYLE_EXT(DS_ABSALIGN,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_SYSMODAL,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_LOCALEDIT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_SETFONT,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_MODALFRAME,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_NOIDLEMSG,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_SETFOREGROUND,					0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_3DLOOK,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_FIXEDSYS,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_NOFAILCREATE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_CONTROL,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_CENTER,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_CENTERMOUSE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DS_CONTEXTHELP,						0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Static[] =
{
	REGISTER_STYLE_EXT(SS_LEFT,								0x1F,	-1,	SS_CENTER | SS_RIGHT)
	REGISTER_STYLE_EXT(SS_CENTER,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_RIGHT,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_ICON,								0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_BLACKRECT,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_GRAYRECT,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_WHITERECT,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_BLACKFRAME,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_GRAYFRAME,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_WHITEFRAME,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_USERITEM,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_SIMPLE,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_LEFTNOWORDWRAP,					0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_OWNERDRAW,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_BITMAP,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_ENHMETAFILE,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_ETCHEDHORZ,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_ETCHEDVERT,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_ETCHEDFRAME,						0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_TYPEMASK,							0x1F,	-1,	0 )
	REGISTER_STYLE_EXT(SS_NOPREFIX,							0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_NOTIFY,							0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_CENTERIMAGE,						0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_RIGHTJUST,						0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_REALSIZEIMAGE,					0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_SUNKEN,							0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_ENDELLIPSIS,						0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_PATHELLIPSIS,						0,		-1,	0 )
	REGISTER_STYLE_EXT(SS_WORDELLIPSIS,						0,		-1,	0 )
//	REGISTER_STYLE_EXT(SS_ELLIPSISMASK)

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Edit[] =
{
	REGISTER_STYLE_EXT(ES_LEFT,								0,	-1,	(ES_CENTER | ES_RIGHT) )
	REGISTER_STYLE_EXT(ES_CENTER,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_RIGHT,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_MULTILINE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_UPPERCASE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_LOWERCASE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_PASSWORD,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_AUTOVSCROLL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_AUTOHSCROLL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_NOHIDESEL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_OEMCONVERT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_READONLY,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_WANTRETURN,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_NUMBER,							0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Button[] =
{
	REGISTER_STYLE_EXT(BS_PUSHBUTTON,						0,		-1,	(BS_DEFPUSHBUTTON | BS_CHECKBOX | BS_AUTOCHECKBOX | BS_RADIOBUTTON | BS_AUTORADIOBUTTON | BS_GROUPBOX) )
	REGISTER_STYLE_EXT(BS_DEFPUSHBUTTON,					0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_CHECKBOX,							0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_AUTOCHECKBOX,						0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_RADIOBUTTON,						0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_3STATE,							0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_AUTO3STATE,						0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_GROUPBOX,							0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_USERBUTTON,						0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_AUTORADIOBUTTON,					0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_OWNERDRAW,						0xF,	-1,	0 )
	REGISTER_STYLE_EXT(BS_LEFTTEXT,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_TEXT,								0,		-1,	(BS_ICON | BS_BITMAP | BS_CHECKBOX | BS_AUTOCHECKBOX | BS_RADIOBUTTON | BS_AUTORADIOBUTTON) )
	REGISTER_STYLE_EXT(BS_ICON,								0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_BITMAP,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_LEFT,								0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_RIGHT,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_CENTER,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_TOP,								0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_BOTTOM,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_VCENTER,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_PUSHLIKE,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_MULTILINE,						0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_NOTIFY,							0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_FLAT,								0,		-1,	0 )
	REGISTER_STYLE_EXT(BS_RIGHTBUTTON,						0,		-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ListBox[] =
{
	REGISTER_STYLE_EXT(LBS_NOTIFY,							0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_SORT,							0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_NOREDRAW,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_MULTIPLESEL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_OWNERDRAWFIXED,					0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_OWNERDRAWVARIABLE,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_HASSTRINGS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_USETABSTOPS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_NOINTEGRALHEIGHT,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_MULTICOLUMN,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_WANTKEYBOARDINPUT,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_EXTENDEDSEL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_DISABLENOSCROLL,					0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_NODATA,							0,	-1,	0 )
	REGISTER_STYLE_EXT(LBS_NOSEL,							0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ComboBox[] =
{
	REGISTER_STYLE_EXT(CBS_SIMPLE,							0x3,	-1,	0 )
	REGISTER_STYLE_EXT(CBS_DROPDOWN,						0x3,	-1,	0 )
	REGISTER_STYLE_EXT(CBS_DROPDOWNLIST,					0x3,	-1,	0 )
	REGISTER_STYLE_EXT(CBS_OWNERDRAWFIXED,					0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_OWNERDRAWVARIABLE,				0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_AUTOHSCROLL,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_OEMCONVERT,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_SORT,							0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_HASSTRINGS,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_NOINTEGRALHEIGHT,				0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_DISABLENOSCROLL,					0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_UPPERCASE,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CBS_LOWERCASE,						0,		-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ScrollBar[] =
{
	REGISTER_STYLE_EXT(SBS_HORZ,							0,	-1,	(SBS_VERT | SBS_SIZEBOX | SBS_SIZEGRIP) )
	REGISTER_STYLE_EXT(SBS_VERT,							0,	-1,	(SBS_SIZEBOX | SBS_SIZEGRIP) )
	REGISTER_STYLE_EXT(SBS_TOPALIGN,						0,	SBS_HORZ,	0 )
	REGISTER_STYLE_EXT(SBS_LEFTALIGN,						0,	SBS_VERT,	0 )
	REGISTER_STYLE_EXT(SBS_BOTTOMALIGN,						0,	SBS_HORZ | SBS_SIZEBOX | SBS_SIZEGRIP, 0 )
	REGISTER_STYLE_EXT(SBS_RIGHTALIGN,						0,	SBS_VERT | SBS_SIZEBOX | SBS_SIZEGRIP, 0 )
	REGISTER_STYLE_EXT(SBS_SIZEBOXTOPLEFTALIGN,				0,	SBS_SIZEBOX | SBS_SIZEGRIP, 0 )
	REGISTER_STYLE_EXT(SBS_SIZEBOXBOTTOMRIGHTALIGN,			0,	SBS_SIZEBOX | SBS_SIZEGRIP, 0 )
	REGISTER_STYLE_EXT(SBS_SIZEBOX,							0,	-1,	0 )
	REGISTER_STYLE_EXT(SBS_SIZEGRIP,						0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_CommCtrl[] =
{
	REGISTER_STYLE_EXT(CCS_TOP,								0x3,	-1,	0 )
	REGISTER_STYLE_EXT(CCS_NOMOVEY,							0x3,	-1,	0 )
	REGISTER_STYLE_EXT(CCS_BOTTOM,							0x3,	-1,	0 )
	REGISTER_STYLE_EXT(CCS_NORESIZE,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CCS_NOPARENTALIGN,					0,		-1,	0 )
	REGISTER_STYLE_EXT(CCS_ADJUSTABLE,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CCS_NODIVIDER,						0,		-1,	0 )
	REGISTER_STYLE_EXT(CCS_VERT,							0,		-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_UpDown[] =
{
	REGISTER_STYLE_EXT(UDS_WRAP,							0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_SETBUDDYINT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_ALIGNRIGHT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_ALIGNLEFT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_AUTOBUDDY,						0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_ARROWKEYS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_HORZ,							0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_NOTHOUSANDS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(UDS_HOTTRACK,						0,	-1,	0 )
/*
#ifdef _WINCE
	REGISTER_STYLE_EXT(UDS_EXPANDABLE)
	REGISTER_STYLE_EXT(UDS_NOSCROLL)
#endif
*/
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Pager[] =
{
	REGISTER_STYLE_EXT(PGS_VERT,							0,	-1,	PGS_HORZ )
	REGISTER_STYLE_EXT(PGS_HORZ,							0,	-1,	0 )
	REGISTER_STYLE_EXT(PGS_AUTOSCROLL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(PGS_DRAGNDROP,						0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Trackbar[] =
{
	REGISTER_STYLE_EXT(TBS_AUTOTICKS,						0xF,	-1,	0 )
	REGISTER_STYLE_EXT(TBS_VERT,							0xF,	-1,	0 )
	REGISTER_STYLE_EXT(TBS_HORZ,							0xF,	-1,	TBS_VERT )
	REGISTER_STYLE_EXT(TBS_TOP,								0xF,	-1,	0 )
	REGISTER_STYLE_EXT(TBS_BOTTOM,							0xF,	-1,	TBS_TOP )
	REGISTER_STYLE_EXT(TBS_LEFT,							0xF,	-1,	0 )
	REGISTER_STYLE_EXT(TBS_RIGHT,							0xF,	-1,	TBS_LEFT )
	REGISTER_STYLE_EXT(TBS_BOTH,							0xF,	-1,	0 )
	REGISTER_STYLE_EXT(TBS_NOTICKS,							0,		-1,	0 )
	REGISTER_STYLE_EXT(TBS_ENABLESELRANGE,					0,		-1,	0 )
	REGISTER_STYLE_EXT(TBS_FIXEDLENGTH,						0,		-1,	0 )
	REGISTER_STYLE_EXT(TBS_NOTHUMB,							0,		-1,	0 )
	REGISTER_STYLE_EXT(TBS_TOOLTIPS,						0,		-1,	0 )
#if (_WIN32_IE >= 0x0500)
//	REGISTER_STYLE_EXT(TBS_REVERSED)
#endif
#if (_WIN32_IE >= 0x0501)
//	REGISTER_STYLE_EXT(TBS_DOWNISLEFT)
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Progress[] =
{
	REGISTER_STYLE_EXT(PBS_SMOOTH,							0,	-1,	0 )
	REGISTER_STYLE_EXT(PBS_VERTICAL,						0,	-1,	0 )
#if (_WIN32_WINNT >= 0x0501)
//	REGISTER_STYLE_EXT(PBS_MARQUEE)
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Header[] =
{
	REGISTER_STYLE_EXT(HDS_HORZ,							0,	-1,	16 )
	REGISTER_STYLE_EXT(HDS_BUTTONS,							0,	-1,	0 )
	REGISTER_STYLE_EXT(HDS_HOTTRACK,						0,	-1,	0 )
	REGISTER_STYLE_EXT(HDS_HIDDEN,							0,	-1,	0 )
	REGISTER_STYLE_EXT(HDS_DRAGDROP,						0,	-1,	0 )
	REGISTER_STYLE_EXT(HDS_FULLDRAG,						0,	-1,	0 )
#if (_WIN32_IE >= 0x0500)
	REGISTER_STYLE_EXT(HDS_FILTERBAR,						0,	-1,	0 )
#endif
#if (_WIN32_WINNT >= 0x501)
//	REGISTER_STYLE_EXT(HDS_FLAT)
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ListView[] =
{
	REGISTER_STYLE_EXT(LVS_ICON,							LVS_TYPEMASK,	-1,	LVS_REPORT | LVS_SMALLICON | LVS_LIST )
	REGISTER_STYLE_EXT(LVS_REPORT,							LVS_TYPEMASK,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_SMALLICON,						LVS_TYPEMASK,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_LIST,							LVS_TYPEMASK,	-1,	0 )
//	REGISTER_STYLE_EXT(LVS_TYPEMASK)
	REGISTER_STYLE_EXT(LVS_SINGLESEL,						0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_SHOWSELALWAYS,					0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_SORTASCENDING,					0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_SORTDESCENDING,					0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_SHAREIMAGELISTS,					0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_NOLABELWRAP,						0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_AUTOARRANGE,						0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_EDITLABELS,						0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_OWNERDATA,						0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_NOSCROLL,						0,				-1,	0 )
//	REGISTER_STYLE_EXT(LVS_TYPESTYLEMASK)
	REGISTER_STYLE_EXT(LVS_ALIGNTOP,						0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_ALIGNLEFT,						LVS_ALIGNMASK,	-1,	0 )
//	REGISTER_STYLE_EXT(LVS_ALIGNMASK)
	REGISTER_STYLE_EXT(LVS_OWNERDRAWFIXED,					0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_NOCOLUMNHEADER,					0,				-1,	0 )
	REGISTER_STYLE_EXT(LVS_NOSORTHEADER,					0,				-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_TreeView[] =
{
	REGISTER_STYLE_EXT(TVS_HASBUTTONS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_HASLINES,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_LINESATROOT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_EDITLABELS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_DISABLEDRAGDROP,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_SHOWSELALWAYS,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_RTLREADING,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_NOTOOLTIPS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_CHECKBOXES,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_TRACKSELECT,						0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(TVS_SINGLEEXPAND,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_INFOTIP,							0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_FULLROWSELECT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_NOSCROLL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TVS_NONEVENHEIGHT,					0,	-1,	0 )
#endif
#if (_WIN32_IE >= 0x500)
	REGISTER_STYLE_EXT(TVS_NOHSCROLL,						0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ReBar[] =
{
	REGISTER_STYLE_EXT(RBS_TOOLTIPS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(RBS_VARHEIGHT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(RBS_BANDBORDERS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(RBS_FIXEDORDER,						0,	-1,	0 )
#ifdef _WINCE
//	REGISTER_STYLE_EXT(RBS_SMARTLABELS)
#else
	REGISTER_STYLE_EXT(RBS_REGISTERDROP,					0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT(RBS_AUTOSIZE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(RBS_VERTICALGRIPPER,					0,	-1,	0 )
	REGISTER_STYLE_EXT(RBS_DBLCLKTOGGLE,					0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ToolBar[] =
{
	REGISTER_STYLE_EXT(TBSTYLE_TOOLTIPS,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_WRAPABLE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_ALTDRAG,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_FLAT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_LIST,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_CUSTOMERASE,					0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(TBSTYLE_REGISTERDROP,				0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_TRANSPARENT,					0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_StatusBar[] =
{
	REGISTER_STYLE_EXT(SBARS_SIZEGRIP,						0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(SBT_TOOLTIPS,						0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Tab[] =
{
	REGISTER_STYLE_EXT(TCS_SCROLLOPPOSITE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_BOTTOM,							0,	TCS_VERTICAL,	0 )
	REGISTER_STYLE_EXT(TCS_RIGHT,							0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_MULTISELECT,						0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(TCS_FLATBUTTONS,						0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT(TCS_FORCEICONLEFT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_FORCELABELLEFT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_HOTTRACK,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_VERTICAL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_TABS,							0,	-1,	TCS_BUTTONS )
	REGISTER_STYLE_EXT(TCS_BUTTONS,							0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_SINGLELINE,						0,	-1,	TCS_MULTILINE )
	REGISTER_STYLE_EXT(TCS_MULTILINE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_RIGHTJUSTIFY,					0,	-1,	-1 )			///<...
	REGISTER_STYLE_EXT(TCS_FIXEDWIDTH,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_RAGGEDRIGHT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_FOCUSONBUTTONDOWN,				0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_OWNERDRAWFIXED,					0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_TOOLTIPS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_FOCUSNEVER,						0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Animate[] =
{
	REGISTER_STYLE_EXT(ACS_CENTER,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ACS_TRANSPARENT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ACS_AUTOPLAY,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ACS_TIMER,							0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_DateTime[] =
{
	REGISTER_STYLE_EXT(DTS_UPDOWN,							0,	-1,	0 )
	REGISTER_STYLE_EXT(DTS_SHOWNONE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DTS_SHORTDATEFORMAT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(DTS_LONGDATEFORMAT,					0,	-1,	DTS_LONGDATEFORMAT )
/*
#if (_WIN32_IE >= 0x500 || defined(_WINCE)
	REGISTER_STYLE_EXT(DTS_SHORTDATECENTURYFORMAT,			0,	-1,	0 )
#endif
*/
	REGISTER_STYLE_EXT(DTS_TIMEFORMAT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DTS_APPCANPARSE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(DTS_RIGHTALIGN,						0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_MonthCal[] =
{
	REGISTER_STYLE_EXT(MCS_DAYSTATE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(MCS_MULTISELECT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(MCS_WEEKNUMBERS,						0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(MCS_NOTODAYCIRCLE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(MCS_NOTODAY,							0,	-1,	0 )
#else
	REGISTER_STYLE_EXT(MCS_NOTODAY,							0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_ToolTip[] =
{
	REGISTER_STYLE_EXT(TTS_ALWAYSTIP,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TTS_NOPREFIX,						0,	-1,	0 )
#if (_WIN32_IE >= 0x0500)
	REGISTER_STYLE_EXT(TTS_NOANIMATE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(TTS_NOFADE,							0,	-1,	0 )
	REGISTER_STYLE_EXT(TTS_BALLOON,							0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStyles_Riched[] =
{
	// Estandard
	REGISTER_STYLE_EXT(ES_LEFT,								0,	-1,	(ES_CENTER | ES_RIGHT) )
	REGISTER_STYLE_EXT(ES_CENTER,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_RIGHT,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_MULTILINE,						0,	-1,	0 )
//	REGISTER_STYLE_EXT(ES_UPPERCASE,						0,	-1,	0 )
//	REGISTER_STYLE_EXT(ES_LOWERCASE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_PASSWORD,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_AUTOVSCROLL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_AUTOHSCROLL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_NOHIDESEL,						0,	-1,	0 )
//	REGISTER_STYLE_EXT(ES_OEMCONVERT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_READONLY,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_WANTRETURN,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_NUMBER,							0,	-1,	0 )
	// RichEdit
	REGISTER_STYLE_EXT(ES_NOOLEDRAGDROP,					0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_DISABLENOSCROLL,					0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_SUNKEN,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ES_SAVESEL,							0,	-1,	0 )
//	REGISTER_STYLE_EXT(ES_SELFIME)
//	REGISTER_STYLE_EXT(ES_VERTICAL)
//	REGISTER_STYLE_EXT(ES_NOIME)
//	REGISTER_STYLE_EXT(ES_SELECTIONBAR)

	REGISTER_STYLE_EXT_NULL()
};
#define LVS_EX_SINGLEROW  0x00040000
#define LVS_EX_SNAPTOGRID  0x00080000
STYLELOOKUPEXT g_aStylesEx_ComboBoxEx[] =
{
	REGISTER_STYLE_EXT(CBES_EX_NOEDITIMAGE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(CBES_EX_NOEDITIMAGEINDENT,			0,	-1,	0 )
	REGISTER_STYLE_EXT(CBES_EX_PATHWORDBREAKPROC,			0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(CBES_EX_NOSIZELIMIT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(CBES_EX_CASESENSITIVE,				0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStylesEx_ListView[] =
{
	REGISTER_STYLE_EXT(LVS_EX_GRIDLINES,					0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_SUBITEMIMAGES,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_CHECKBOXES,					0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_TRACKSELECT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_HEADERDRAGDROP,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_FULLROWSELECT,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_ONECLICKACTIVATE,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_TWOCLICKACTIVATE,				0,	-1,	0 )
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(LVS_EX_FLATSB,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_REGIONAL,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_INFOTIP,						0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_UNDERLINEHOT,					0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_UNDERLINECOLD,				0,	-1,	0 )
	REGISTER_STYLE_EXT(LVS_EX_MULTIWORKAREAS,				0,	-1,	0 )
#endif
#if (_WIN32_IE >= 0x0500)
	REGISTER_STYLE_EXT(LVS_EX_LABELTIP,						0,	-1,	0 )
//	REGISTER_STYLE_EXT(LVS_EX_BORDERSELECT,					0,	-1,	0 )
#endif
#if (_WIN32_WINNT >= 0x501)
//	REGISTER_STYLE_EXT(LVS_EX_DOUBLEBUFFER)
//	REGISTER_STYLE_EXT(LVS_EX_HIDELABELS)
//	REGISTER_STYLE_EXT(LVS_EX_SINGLEROW,					0,	-1,	0 )
//	REGISTER_STYLE_EXT(LVS_EX_SNAPTOGRID,					0,	-1,	0 )
//	REGISTER_STYLE_EXT(LVS_EX_SIMPLESELECT)
#endif
#ifdef _WINCE
//	REGISTER_STYLE_EXT(LVS_EX_NOHSCROLL)
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStylesEx_ToolBar[] =
{
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(TBSTYLE_EX_DRAWDDARROWS,				0,	-1,	0 )
#endif
#if (_WIN32_IE >= 0x0501)
	REGISTER_STYLE_EXT(TBSTYLE_EX_MIXEDBUTTONS,				0,	-1,	0 )
	REGISTER_STYLE_EXT(TBSTYLE_EX_HIDECLIPPEDBUTTONS,		0,	-1,	0 )
#endif
#if (_WIN32_WINNT >= 0x501)
//	REGISTER_STYLE_EXT(TBSTYLE_EX_DOUBLEBUFFER)
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aStylesEx_Tab[] =
{
#if (_WIN32_IE >= 0x0400)
	REGISTER_STYLE_EXT(TCS_EX_FLATSEPARATORS,				0,	-1,	0 )
	REGISTER_STYLE_EXT(TCS_EX_REGISTERDROP,					0,	-1,	0 )
#endif
	REGISTER_STYLE_EXT_NULL()
};
STYLELOOKUPEXT g_aEventMask_Riched[] =
{
	REGISTER_STYLE_EXT(ENM_NONE,							0,	-1,	-1 )		///<...
	REGISTER_STYLE_EXT(ENM_CHANGE,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_UPDATE,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_SCROLL,							0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_KEYEVENTS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_MOUSEEVENTS,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_REQUESTRESIZE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_SELCHANGE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_DROPFILES,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_PROTECTED,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_CORRECTTEXT,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_SCROLLEVENTS,					0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_DRAGDROPDONE,					0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_PARAGRAPHEXPANDED,				0,	-1,	0 )

	REGISTER_STYLE_EXT(ENM_IMECHANGE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_LANGCHANGE,						0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_OBJECTPOSITIONS,					0,	-1,	0 )
	REGISTER_STYLE_EXT(ENM_LINK,							0,	-1,	0 )

	REGISTER_STYLE_EXT_NULL()
};
///////////////////////////////////////////////////////////////////////////////////////////////////
CLASSLISTSTYLELOOKUP g_aClassList_Standard[] =
{
	REGISTER_CLASS(0,								0,		L"#32770",			g_aStyles_Dialog)
	REGISTER_CLASS(0,								0,		WC_STATIC,			g_aStyles_Static)
	REGISTER_CLASS(0,								0,		WC_EDIT,			g_aStyles_Edit)
	REGISTER_CLASS(0,								0,		WC_BUTTON,			g_aStyles_Button)
	REGISTER_CLASS(0,								0,		WC_LISTBOX,			g_aStyles_ListBox)
	REGISTER_CLASS(0,								0,		WC_COMBOBOX,		g_aStyles_ComboBox)
	REGISTER_CLASS(0,								0,		WC_DRAGLIST,		g_aStyles_ListBox)
	REGISTER_CLASS(0,								0,		WC_COMBOBOXEX,		g_aStyles_ComboBox)
	REGISTER_CLASS(0,								0,		WC_SCROLLBAR,		g_aStyles_ScrollBar)
	REGISTER_CLASS(0,								0,		WC_UPDOWN,			g_aStyles_UpDown)
	REGISTER_CLASS(0,								0,		WC_PAGER,			g_aStyles_Pager)
	REGISTER_CLASS(0,								0,		WC_TRACKBAR,		g_aStyles_Trackbar)
	REGISTER_CLASS(0,								0,		WC_PROGRESS,		g_aStyles_Progress)
	REGISTER_CLASS(0,								0,		WC_HEADER,			g_aStyles_Header)
	REGISTER_CLASS(0,								0,		WC_LISTVIEW,		g_aStyles_ListView)
	REGISTER_CLASS(0,								0,		WC_TREEVIEW,		g_aStyles_TreeView)
	REGISTER_CLASS(0,								0,		WC_REBAR,			g_aStyles_ReBar)
	REGISTER_CLASS(0,								0,		WC_TOOLBAR,			g_aStyles_ToolBar)
	REGISTER_CLASS(0,								0,		WC_STATUSBAR,		g_aStyles_StatusBar)
	REGISTER_CLASS(0,								0,		WC_TABCONTROL,		g_aStyles_Tab)
	REGISTER_CLASS(0,								0,		WC_ANIMATE,			g_aStyles_Animate)
	REGISTER_CLASS(0,								0,		WC_DATETIME,		g_aStyles_DateTime)
	REGISTER_CLASS(0,								0,		WC_MONTHCAL,		g_aStyles_MonthCal)
	//REGISTER_CLASS(0,								0,		WC_LINK,			g_aStyles_Link)
	//REGISTER_CLASS(0,								0,		WC_IPADDRESS,		g_aStyles_IPAddress)
	//REGISTER_CLASS(0,								0,		WC_HOTKEY,			g_aStyles_HotKey)
	REGISTER_CLASS(0,								0,		WC_TOOLTIPS,		g_aStyles_ToolTip)
	REGISTER_CLASS(0,								0,		WC_RICHEDIT,		g_aStyles_Riched)
	REGISTER_CLASS(0,								0,		WC_RICHEDIT20A,		g_aStyles_Riched)
	REGISTER_CLASS(0,								0,		WC_RICHEDIT20W,		g_aStyles_Riched)
	REGISTER_CLASS_NULL()
};
CLASSLISTSTYLELOOKUP g_aClassList_CommCtrl[] =
{
	REGISTER_CLASS(0,								0,		WC_REBAR,			g_aStyles_CommCtrl)
	REGISTER_CLASS(0,								0,		WC_TOOLBAR,			g_aStyles_CommCtrl)
	REGISTER_CLASS(0,								0,		WC_STATUSBAR,		g_aStyles_CommCtrl)
	REGISTER_CLASS(0,								0,		WC_HEADER,			g_aStyles_CommCtrl)
	REGISTER_CLASS_NULL()
};
CLASSLISTSTYLELOOKUP g_aClassList_Extended[] =
{
	REGISTER_CLASS(CBEM_GETEXTENDEDSTYLE,			CBEM_SETEXTENDEDSTYLE,			WC_COMBOBOXEX,		g_aStylesEx_ComboBoxEx)
	REGISTER_CLASS(LVM_GETEXTENDEDLISTVIEWSTYLE,	LVM_SETEXTENDEDLISTVIEWSTYLE,	WC_LISTVIEW,		g_aStylesEx_ListView)
	REGISTER_CLASS(TB_GETEXTENDEDSTYLE,				TB_SETEXTENDEDSTYLE,			WC_TOOLBAR,			g_aStylesEx_ToolBar)
	REGISTER_CLASS(TCM_GETEXTENDEDSTYLE,			TCM_SETEXTENDEDSTYLE,			WC_TABCONTROL,		g_aStylesEx_Tab)
	REGISTER_CLASS(EM_GETEVENTMASK,					EM_SETEVENTMASK,				WC_RICHEDIT,		g_aEventMask_Riched)
	REGISTER_CLASS(EM_GETEVENTMASK,					EM_SETEVENTMASK,				WC_RICHEDIT20A,		g_aEventMask_Riched)
	REGISTER_CLASS(EM_GETEVENTMASK,					EM_SETEVENTMASK,				WC_RICHEDIT20W,		g_aEventMask_Riched)
	REGISTER_CLASS_NULL()
};

///////////////////////////////////////////////////////////////////////////////////////////////////


#else
#include "utils2.h"

typedef struct _CLASS_LOOKUP CLASS_LOOKUP;
typedef struct _CLASSIMAGE_LOOKUP CLASSIMAGE_LOOKUP;


typedef struct _CLASS_LOOKUP
{
	PCWSTR					ClassName;
	CLASSIMAGE_LOOKUP*		ImageLookup;
}CLASS_LOOKUP;

typedef struct _CLASSIMAGE_LOOKUP
{
	PCWSTR					ImageName;
	DWORD					Mask;
	DWORD					AdjustStyles;
	QImage					Image;
}CLASSIMAGE_LOOKUP;


///////////////////////////////////////////////////////////////////////////////////////////////////

#define REGISTER_CLASS_LOOKUP(name, imagelookup)	{	name, imagelookup	}
#define REGISTER_CLASS_LOOKUP_NULL()				{	0, 0 }

#define REGISTER_CLASS_IMAGE(styles, mask, name)		{	name, mask, styles, QImage(), }
#define REGISTER_CLASS_IMAGE_NULL()					{	0, 0, 0, QImage(), }

///////////////////////////////////////////////////////////////////////////////////////////////////
static CLASSIMAGE_LOOKUP g_ClassImageStatic_Lookup[] =
{
	REGISTER_CLASS_IMAGE(SS_BITMAP,					0xF,	_L("class_image.png")),
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_text.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageEdit_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_edit.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageButton_Lookup[] =
{
	REGISTER_CLASS_IMAGE(BS_GROUPBOX,				0xF,	_L("class_groupbox.png")),
	REGISTER_CLASS_IMAGE(BS_CHECKBOX,				0xF,	_L("class_checkbutton.png")),
	REGISTER_CLASS_IMAGE(BS_AUTOCHECKBOX,			0xF,	_L("class_checkbutton.png")),
	REGISTER_CLASS_IMAGE(BS_AUTO3STATE,				0xF,	_L("class_checkbutton.png")),
	REGISTER_CLASS_IMAGE(BS_3STATE,					0xF,	_L("class_checkbutton.png")),
	REGISTER_CLASS_IMAGE(BS_RADIOBUTTON,				0xF,	_L("class_radiobutton.png")),
	REGISTER_CLASS_IMAGE(BS_AUTORADIOBUTTON,			0xF,	_L("class_radiobutton.png")),
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_pushbutton.png")),		// (default push-button)
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageScrollBar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(SBS_VERT,					0,		_L("class_scrollbar_vert.png")),
	REGISTER_CLASS_IMAGE(SBS_SIZEBOX | SBS_SIZEGRIP,	0,		_L("class_sizegrip.png")),
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_scrollbar_horz.png")),		// (default horizontal)
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageListBox_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_listbox.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageComboBox_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_combobox.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageComboBoxEx_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_combobox_extended.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageAnimate_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_animate.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageDateTime_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_datetime.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageMonthCalendar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_calendar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageHeader_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_header.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageListView_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_listview.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageTreeView_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_treeview.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageLink_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_link.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImagePager_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_pager.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageIPAddress_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_ipaddress.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageReBar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_rebar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageToolBar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_toolbar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageTabControl_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_tabbar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageUpDown_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_spin.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageStatusBar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_statusbar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageProgressBar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_progressbar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageToolTip_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_tip.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageTrackBar_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_trackbar.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
///////////////////////////////////////////////////////////////////////////////////////////////////
static CLASSIMAGE_LOOKUP g_ClassImageMenu_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_menu.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageDialog_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_dialog.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
///////////////////////////////////////////////////////////////////////////////////////////////////
static CLASSIMAGE_LOOKUP g_ClassImageRichEdit_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_richedit_1.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageRichEdit2_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_richedit_2.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
///////////////////////////////////////////////////////////////////////////////////////////////////
static CLASSIMAGE_LOOKUP g_ClassImageHotKey_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_hotkey.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageMdiClient_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_mdi.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageInternetExplorerLookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_iexplorer.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageTrayWndLookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_start_menu.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
///////////////////////////////////////////////////////////////////////////////////////////////////
static CLASSIMAGE_LOOKUP g_ClassImageWindowQt_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_window_qt.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageWindowFox_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_window_fox.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageWindowWx_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_window_wx.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};
static CLASSIMAGE_LOOKUP g_ClassImageWindowGdk_Lookup[] =
{
	REGISTER_CLASS_IMAGE(0,							0,		_L("class_window_gtk.png")),
	REGISTER_CLASS_IMAGE_NULL(),
};

///////////////////////////////////////////////////////////////////////////////////////////////////

CLASS_LOOKUP g_ClassLookup[] =
{
	REGISTER_CLASS_LOOKUP(CLASSNAME_STATIC,					g_ClassImageStatic_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_EDIT,					g_ClassImageEdit_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_BUTTON,					g_ClassImageButton_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_SCROLLBAR,				g_ClassImageScrollBar_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_LISTBOX,				g_ClassImageListBox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_COMBOBOX,				g_ClassImageComboBox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_COMBOBOXEX,				g_ClassImageComboBoxEx_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_ANIMATE,				g_ClassImageAnimate_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_DATETIME,				g_ClassImageDateTime_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_MONTHCALENDAR,			g_ClassImageMonthCalendar_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_HEADER,					g_ClassImageHeader_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_LISTVIEW,				g_ClassImageListView_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_TREEVIEW,				g_ClassImageTreeView_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_LINK,					g_ClassImageLink_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_PAGER,					g_ClassImagePager_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_IPADDRESS,				g_ClassImageIPAddress_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_REBAR,					g_ClassImageReBar_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_TOOLBAR,				g_ClassImageToolBar_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_TABCONTROL,				g_ClassImageTabControl_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_UPDOWN,					g_ClassImageUpDown_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_STATUSBAR,				g_ClassImageStatusBar_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_PROGRESS,				g_ClassImageProgressBar_Lookup),

	REGISTER_CLASS_LOOKUP(CLASSNAME_TOOLTIP,				g_ClassImageToolTip_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_TRACKBAR,				g_ClassImageTrackBar_Lookup),

	// ...
	REGISTER_CLASS_LOOKUP(CLASSNAME_MENU,					g_ClassImageMenu_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_DIALOG,					g_ClassImageDialog_Lookup),

	// ...
	REGISTER_CLASS_LOOKUP(CLASSNAME_RICHEDIT,				g_ClassImageRichEdit_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_RICHEDIT20A,			g_ClassImageRichEdit2_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_RICHEDIT20W,			g_ClassImageRichEdit2_Lookup),

	// ...
	REGISTER_CLASS_LOOKUP(CLASSNAME_HOTKEY,					g_ClassImageHotKey_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_MDICLIENT,				g_ClassImageMdiClient_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_INTERNETEXPLORER,		g_ClassImageInternetExplorerLookup),

	// Clases del toolkit: Qt
	REGISTER_CLASS_LOOKUP(CLASSNAME_QPOPUP,					g_ClassImageWindowQt_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_QWIDGET,				g_ClassImageWindowQt_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_QTOOL,					g_ClassImageWindowQt_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_QTOOLTIP,				g_ClassImageWindowQt_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_QGLWIDGET,				g_ClassImageWindowQt_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_QWIDGETOWNDC,			g_ClassImageWindowQt_Lookup),

	// Clases del toolkit: Fox
	REGISTER_CLASS_LOOKUP(CLASSNAME_FXPOPUP,				g_ClassImageWindowFox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_FXWINDOW,				g_ClassImageWindowFox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_FXTOPWINDOW,			g_ClassImageWindowFox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_GLTEMP,					g_ClassImageWindowFox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_FXGLCANVAS,				g_ClassImageWindowFox_Lookup),

	// Clases del toolkit: Wx
	REGISTER_CLASS_LOOKUP(CLASSNAME_WXWINDOWCLASS,			g_ClassImageWindowWx_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_WXWINDOWCLASSNR,		g_ClassImageWindowWx_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_WXMDIFRAMECLASS,		g_ClassImageWindowWx_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_WXMDIFRAMECLASSNR,		g_ClassImageWindowWx_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_WXMDICHILDFRAMECLASS,	g_ClassImageWindowWx_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_WXMDICHILDFRAMECLASSNR,	g_ClassImageWindowWx_Lookup),

	// Clases del toolkit: Gdk
	REGISTER_CLASS_LOOKUP(CLASSNAME_GDKWINDOWCHILD,			g_ClassImageWindowGdk_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_GDKWINDOWDIALOG,		g_ClassImageWindowGdk_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_GDKWINDOWTOPLEVEL,		g_ClassImageWindowGdk_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_GDKWINDOWTEMP,			g_ClassImageWindowGdk_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_GDKWINDOWTEMPSHADOW,	g_ClassImageWindowGdk_Lookup),

	// ...
	REGISTER_CLASS_LOOKUP(_L("ComboLBox"),					g_ClassImageComboBox_Lookup),
	REGISTER_CLASS_LOOKUP(CLASSNAME_TRAYWND,				g_ClassImageTrayWndLookup),

	REGISTER_CLASS_LOOKUP_NULL(),
};
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
HANDLELOOKUP g_aLookup_Icon[] =
{
	REGISTER_HANDLE(IDI_APPLICATION)
	REGISTER_HANDLE(IDI_HAND)
	REGISTER_HANDLE(IDI_QUESTION)
	REGISTER_HANDLE(IDI_EXCLAMATION)
	REGISTER_HANDLE(IDI_ASTERISK)
	REGISTER_HANDLE(IDI_WINLOGO)

	REGISTER_HANDLE_NULL()
};
///////////////////////////////////////////////////////////////////////////////////////////////////
HANDLELOOKUP g_aLookup_Cursor[] =
{
	REGISTER_HANDLE(IDC_ARROW)
	REGISTER_HANDLE(IDC_IBEAM)
	REGISTER_HANDLE(IDC_WAIT)
	REGISTER_HANDLE(IDC_CROSS)
	REGISTER_HANDLE(IDC_UPARROW)
	REGISTER_HANDLE(IDC_SIZE)
	REGISTER_HANDLE(IDC_ICON)
	REGISTER_HANDLE(IDC_SIZENWSE)
	REGISTER_HANDLE(IDC_SIZENESW)
	REGISTER_HANDLE(IDC_SIZEWE)
	REGISTER_HANDLE(IDC_SIZENS)
	REGISTER_HANDLE(IDC_SIZEALL)
	REGISTER_HANDLE(IDC_NO)
#if (WINVER >= 0x0500)
	REGISTER_HANDLE(IDC_HAND)
#endif
	REGISTER_HANDLE(IDC_APPSTARTING)
	REGISTER_HANDLE(IDC_HELP)

	REGISTER_HANDLE_NULL()
};
///////////////////////////////////////////////////////////////////////////////////////////////////
HANDLELOOKUP g_aLookup_StockBrush[] =
{
	REGISTER_HANDLE(WHITE_BRUSH)
	REGISTER_HANDLE(LTGRAY_BRUSH)
	REGISTER_HANDLE(GRAY_BRUSH)
	REGISTER_HANDLE(DKGRAY_BRUSH)
	REGISTER_HANDLE(BLACK_BRUSH)
	REGISTER_HANDLE(NULL_BRUSH)

	REGISTER_HANDLE_NULL()
};
///////////////////////////////////////////////////////////////////////////////////////////////////
HANDLELOOKUP g_aLookup_SystemBrush[] =
{
	REGISTER_HANDLE(COLOR_SCROLLBAR)
	REGISTER_HANDLE(COLOR_BACKGROUND)
	REGISTER_HANDLE(COLOR_ACTIVECAPTION)
	REGISTER_HANDLE(COLOR_INACTIVECAPTION)
	REGISTER_HANDLE(COLOR_MENU)
	REGISTER_HANDLE(COLOR_WINDOW)
	REGISTER_HANDLE(COLOR_WINDOWFRAME)
	REGISTER_HANDLE(COLOR_MENUTEXT)
	REGISTER_HANDLE(COLOR_WINDOWTEXT)
	REGISTER_HANDLE(COLOR_CAPTIONTEXT)
	REGISTER_HANDLE(COLOR_ACTIVEBORDER)
	REGISTER_HANDLE(COLOR_INACTIVEBORDER)
	REGISTER_HANDLE(COLOR_APPWORKSPACE)
	REGISTER_HANDLE(COLOR_HIGHLIGHT)
	REGISTER_HANDLE(COLOR_HIGHLIGHTTEXT)
	REGISTER_HANDLE(COLOR_BTNFACE)
	REGISTER_HANDLE(COLOR_BTNSHADOW)
	REGISTER_HANDLE(COLOR_GRAYTEXT)
	REGISTER_HANDLE(COLOR_BTNTEXT)
	REGISTER_HANDLE(COLOR_INACTIVECAPTIONTEXT)
	REGISTER_HANDLE(COLOR_BTNHIGHLIGHT)
	REGISTER_HANDLE(COLOR_3DDKSHADOW)
	REGISTER_HANDLE(COLOR_3DLIGHT)
	REGISTER_HANDLE(COLOR_INFOTEXT)
	REGISTER_HANDLE(COLOR_INFOBK)
#ifdef _WINCE
	REGISTER_HANDLE(COLOR_STATIC)
	REGISTER_HANDLE(COLOR_STATICTEXT)
	REGISTER_HANDLE(COLOR_GRADIENTACTIVECAPTION)
	REGISTER_HANDLE(COLOR_GRADIENTINACTIVECAPTION)
#else
#if (WINVER >= 0x0500)
	REGISTER_HANDLE(COLOR_HOTLIGHT)
	REGISTER_HANDLE(COLOR_GRADIENTACTIVECAPTION)
	REGISTER_HANDLE(COLOR_GRADIENTINACTIVECAPTION)
#endif
#if (WINVER >= 0x0501)
	REGISTER_HANDLE(COLOR_MENUHILIGHT)
	REGISTER_HANDLE(COLOR_MENUBAR)
#endif
#endif

	REGISTER_HANDLE_NULL()
};
HANDLELOOKUP g_aLookup_Font[] =
{
	REGISTER_HANDLE(OEM_FIXED_FONT)
	REGISTER_HANDLE(ANSI_FIXED_FONT)
	REGISTER_HANDLE(ANSI_VAR_FONT)
	REGISTER_HANDLE(SYSTEM_FONT)
	REGISTER_HANDLE(DEVICE_DEFAULT_FONT)
	REGISTER_HANDLE(SYSTEM_FIXED_FONT)
	REGISTER_HANDLE(DEFAULT_GUI_FONT)

	REGISTER_HANDLE_NULL()
};
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
void InitLookupData()
{
	static bool Initialized = false;
	if(Initialized)
		return;

	// Cargar lista de iconos
	CLASS_LOOKUP* ClassLookup;
	CLASSIMAGE_LOOKUP* ImageLookup;

	ClassLookup = &g_ClassLookup[0];
	for( ; ClassLookup->ClassName != NULL; ClassLookup++)
	{
		ImageLookup = ClassLookup->ImageLookup;
		if(ImageLookup)
		{
			QString s;
			for( ; ImageLookup->ImageName; ImageLookup++)
			{
				s = ":/images/class/";
				s += QString::fromWCharArray(ImageLookup->ImageName);

				ImageLookup->Image = QImage(s);
				if(ImageLookup->Image.isNull())
				{
					qDebug(s.toLatin1().data());
					qDebug("Image is null");
				}
			}
		}
	}
	// Iniciar fuentes
	for(int i = 0; g_aLookup_Font[i].pHandleName != NULL; i++)
	{
		g_aLookup_Font[i].hHandle = GetStockObject(g_aLookup_Font[i].nType);
	}
	// Iniciar iconos
	for(int i = 0; g_aLookup_Icon[i].pHandleName != NULL; i++)
	{
		g_aLookup_Icon[i].hHandle = LoadIcon(NULL, MAKEINTRESOURCE(g_aLookup_Icon[i].nType));
	}
	// Iniciar cursores
	for(int i = 0; g_aLookup_Cursor[i].pHandleName != NULL; i++)
	{
		g_aLookup_Cursor[i].hHandle = LoadCursor(NULL, MAKEINTRESOURCE(g_aLookup_Cursor[i].nType));
	}
	// Iniciar stack brushes
	for(int i = 0; g_aLookup_StockBrush[i].pHandleName != NULL; i++)
	{
		g_aLookup_StockBrush[i].hHandle = GetStockObject(g_aLookup_StockBrush[i].nType);
	}
	// Iniciar system brushes
	for(int i = 0; g_aLookup_SystemBrush[i].pHandleName != NULL; i++)
	{
		g_aLookup_SystemBrush[i].hHandle = GetSysColorBrush(g_aLookup_SystemBrush[i].nType);
	}
	// ...
	Initialized = true;
}
void ShutdownLookupData()
{
}
bool AppendFormatStyleLookup(WCHAR* Text, STYLELOOKUP* Lookup, uint Style)
{
	if(Style == 0 || Style == (uint)-1)
	{
		wcscat(Text, L" (NULL)");
		return true;
	}
	else
	{
		for(int i = 0; Lookup[i].pszStyleName != NULL; i++)
		{
			if(Lookup[i].fStyle == Style)
			{
				wcscat(Text, L" (");
				wcscat(Text, Lookup[i].pszStyleName);
				wcscat(Text, L")");
				return true;
			}
		}
	}
	return false;
}

bool AppendFormatHandleLookup(WCHAR* Text, HANDLELOOKUP* Lookup, HANDLE Handle)
{
	if(Handle != 0)
	{
		for(int i = 0; Lookup[i].pHandleName != NULL; i++)
		{
			if(Lookup[i].hHandle == Handle)
			{
				/*
				wcscat(Text, L"(");
				wcscat(Text, Lookup[i].pHandleName);
				wcscat(Text, L")");
				*/
				wcscat(Text, Lookup[i].pHandleName);
				return true;
			}
		}
	}
	return false;
}



#endif
